/*
 * funcionesImpresionPorPantallaTP1.c
 *
 *  Created on: 14 abr 2022
 *      Author: JDXMAX
 */

#include <stdio.h>
#include <time.h>
#include "dataInOutValidateTP1.h"


///mostrarMenuInicial: IMPRIMIRA POR PANTALLA EL MENU PRINCIPAL, JUNTO A LOS VALORES DE KM y PRECIO AA / LATAM
///parametro 1. float km, ingresa los km del viaje
///parametro 2. float precioAA, ingresa el precio del viaje de AA
///parametro 3. float precioLatam, ingresa el precio del viaje de Latam

void mostrarMenuInicial(float km, float precioAA, float precioLatam){
    printf("1- Ingresar KM. ( KM = %2.f )\n", km);
	printf("2- Ingresar valor del vuelo. (Aerolíneas = $ %2.f, Latam = $ %2.f)\n", precioAA, precioLatam);
	printf("3- Calcular costos. \n");
	printf("4- Mostrar datos de facturacion. \n");
	printf("5- Carga Manual de Datos. \n");
	printf("6- Salir. \n");
    printf("\n\nSELECCIONA LA OPCION: \n\n");

}


///recibirOpcionMenuPrincipal: ESCANEARA LA OPCION ELEGIDA POR USUARIO
///parametro 1. float km, sera utilizado si ingresa valores invalidos para mostrar en menu principal
///parametro 2. float precioAA, sera utilizado si ingresa valores invalidos para mostrar en menu principal
///parametro 3. float precioLatam, sera utilizado si ingresa valores invalidos para mostrar en menu principal

int recibirOpcionMenuPrincipal(float km, float precioAA, float precioLatam){
    int opcion;
    scanf("%d", &opcion);
    opcion = validarOpcionMenuPrincipal(opcion, km, precioAA, precioLatam);

    return opcion;
}


///noRealizarCalculos: IMPRIMIRA POR PANTALLA CUANDO FALTAN DATOS PARA CONTINUAR

void noRealizarCalculos(){
    printf("\nFaltan cargar datos. Verifique Kilometraje y precios de Aereolineas\n\n\n");
}


///noMostrarCalculos: IMPRIMIRA POR PANTALLA CUANDO NO SE CALCULARON LOS DATOS PARA MOSTRAR

void noMostrarCalculos(){
    printf("\nFaltan calcular datos. Verifique haber calculado previamente\n\n\n");
}


///limpiarPantalla: IMPRIMIRA 60 SALTOS DE LINEA PARA MANTENER LA PANTALLA MAS LIMPIA

void limpiarPantalla(){
        printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
}


///delay: dormira el programa por la cantidad de segundos indicado por el programador
///parametro 1: int secs, cantidad de segundos a dormir el programa

void delay(int secs) {
  for(int i = (time(NULL) + secs); time(NULL) != i; time(NULL));
}



///calcularTodosLosCostos: IMPRIMIRA POR PANTALLA MENSAJE QUE SE ESTA REALIZANDO EL CALCULOS DE COSTOS

void calcularTodosLosCostos(){
    printf("\n\nCAlCULANDO COSTOS.... ESPERE...\n");
    delay(1);
    printf("3...\n");
    delay(2);
    printf("2...\n");
    delay(2);
    printf("1...\n");
    delay(1);
    printf("...TODO OK...\n");
    delay(1);
    limpiarPantalla();
}


